name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]
        runtime: [win10-x64, win10-x86]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        clean: true
        lfs: true
        submodules: recursive

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: dotnet restore
      
    - name: Build
      run: dotnet publish -c $env:Configuration --no-self-contained --runtime $env:Runtime 
      env:
        Configuration: ${{ matrix.configuration }}
        Runtime: ${{ matrix.runtime }}

    - name: Zip Artifacts
      run: Compress-Archive -Path "VoiceMeeterVolumeLink\bin\$($env:Configuration)\net6.0-windows\$($env:Runtime)\publish\*" -DestinationPath "$($env:Configuration).$($env:Runtime).zip" -CompressionLevel NoCompression
      shell: pwsh
      env:
        Configuration: ${{ matrix.configuration }}
        Runtime: ${{ matrix.runtime }}

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.configuration }}-${{ matrix.runtime }}
        path: ${{ matrix.configuration }}.${{ matrix.runtime }}.zip
        if-no-files-found: error
